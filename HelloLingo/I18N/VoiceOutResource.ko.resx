<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BoostYourChances" xml:space="preserve">
    <value>사용하고 계신 모든 메신저를 공유하시면 연결될 가능성이 더 높아집니다.</value>
  </data>
  <data name="ClickToInvite" xml:space="preserve">
    <value>보이스채팅에 회원들을 초대하려면 클릭하세요.</value>
  </data>
  <data name="ContactCopiedToClipBoard" xml:space="preserve">
    <value>연락처가 클립보드에 복사되었습니다.</value>
  </data>
  <data name="DeleteInviteConfirm" xml:space="preserve">
    <value>이 회원으로부터 받은 초대를 삭제하시겠습니까?</value>
  </data>
  <data name="InviteAll" xml:space="preserve">
    <value>선택한 모든 회원 초대하기</value>
  </data>
  <data name="Invited" xml:space="preserve">
    <value>초대완료</value>
  </data>
  <data name="InvitingMembers" xml:space="preserve">
    <value>회원 초대하기</value>
  </data>
  <data name="LobbyHeadLine" xml:space="preserve">
    <value>&lt;p&gt;보이스 채팅 기능은 선호하시는 메신저를 이용하여&lt;br/&gt;Hellolingo의 회원들과 연결될 수 있도록 해준답니다.&lt;/p&gt;&lt;p&gt;다른 회원들을 초대하고, 또 초대 받으시려면 기능을 켜주세요.&lt;/p&gt;</value>
  </data>
  <data name="NewInvitations" xml:space="preserve">
    <value>새로 받은 초대</value>
  </data>
  <data name="NoInvitations" xml:space="preserve">
    <value>받은 초대가 없습니다.</value>
  </data>
  <data name="OneContactNeeded" xml:space="preserve">
    <value>초대를 하시려면 적어도 하나의 연락처가 필요합니다.</value>
  </data>
  <data name="SelectServices" xml:space="preserve">
    <value>사용 하시고자 하는 메신저를 모두 선택해주세요.</value>
  </data>
  <data name="ShareWithPartners" xml:space="preserve">
    <value>파트너(들)에게 공유하고자 하는 연락처 정보를 입력하세요.</value>
  </data>
  <data name="TryInvite" xml:space="preserve">
    <value>회원들을 초대해 보세요!</value>
  </data>
  <data name="YouAreInvited" xml:space="preserve">
    <value>보이스 채팅에 초대 되었습니다.</value>
  </data>
  <data name="Received" xml:space="preserve">
    <value>받은 초대</value>
  </data>
</root>